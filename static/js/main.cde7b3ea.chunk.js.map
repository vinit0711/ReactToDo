{"version":3,"sources":["firebase.js","Todo.jsx","App.jsx","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","Todo","props","useState","open","setOpen","Modal","onClose","List","ListItem","ListItemAvatar","ListItemText","primary","text","secondary","Button","onClick","e","event","console","log","collection","doc","todo","id","App","todos","SetTodos","input","SetInput","inputEvent","preventDefault","target","value","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","className","FormControl","onSubmit","InputLabel","Input","type","onChange","add","timestamp","FieldValue","serverTimestamp","variant","color","disabled","ReactDOM","render","document","getElementById"],"mappings":"6OAEMA,EAAcC,IAASC,cAAc,CACvCC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGbC,EAAKV,EAAYW,YAGRD,GAFFV,EAAYY,OAEVF,G,OC0CAG,MAhCf,SAAcC,GACZ,MAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAQA,OACE,qCACE,cAACC,EAAA,EAAD,CAAOF,KAAMA,EAAMG,QATH,WAClBF,GAAQ,IAQN,SACE,6CAEF,eAACG,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAcC,QAASV,EAAMW,KAAMC,UAAU,oBAE/C,cAACC,EAAA,EAAD,CAAQC,QAAS,SAACC,GAAD,OAAOZ,GAAQ,IAAhC,kBACA,cAACU,EAAA,EAAD,CACEC,QAAS,SAACE,GAAD,OACPC,QAAQC,IAAItB,EAAGuB,WAAW,SAASC,IAAIpB,EAAMqB,KAAKC,MAFtD,kCCiBOC,EAtDH,WACV,MAA0BtB,mBAAS,IAAnC,mBAAOuB,EAAP,KAAcC,EAAd,KAEA,EAA0BxB,mBAAS,IAAnC,mBAAOyB,EAAP,KAAcC,EAAd,KAEMC,EAAa,SAACb,GAElBA,EAAEc,iBACFF,EAASZ,EAAEe,OAAOC,QAmBpB,OAPAC,qBAAU,WACRpC,EAAGuB,WAAW,SACXc,QAAQ,YAAa,QACrBC,YAAW,SAACC,GACXV,EAASU,EAASC,KAAKC,KAAI,SAACjB,GAAD,OAASA,EAAIkB,OAAOjB,cAElD,IAED,mCACE,sBAAKkB,UAAU,MAAf,UACE,eAACC,EAAA,EAAD,CAAaC,SAAUb,EAAvB,UACE,cAACc,EAAA,EAAD,wBACA,cAACC,EAAA,EAAD,CAAOC,KAAK,OAAOb,MAAOL,EAAOmB,SAAUjB,IAC3C,uBACA,cAACf,EAAA,EAAD,CACE+B,KAAK,SACL9B,QAzBM,SAACC,GAEfnB,EAAGuB,WAAW,SAAS2B,IAAI,CACzBzB,KAAMK,EACNqB,UAAW5D,IAASU,UAAUmD,WAAWC,oBAE3CtB,EAAS,KAoBDuB,QAAQ,YACRC,MAAM,UACNC,UAAW1B,EALb,0BAUF,6BACGF,EAAMa,KAAI,SAAChB,GAAD,OACT,cAAC,EAAD,CAAMV,KAAMU,eCzBxBgC,IAASC,OACP,cAAC,EAAD,IACEC,SAASC,eAAe,W","file":"static/js/main.cde7b3ea.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyAW0jTW8uFICaGylHwyoWhDxq68Ik7Yjhg\",\n    authDomain: \"todo-app-349f3.firebaseapp.com\",\n    projectId: \"todo-app-349f3\",\n    storageBucket: \"todo-app-349f3.appspot.com\",\n    messagingSenderId: \"997835975983\",\n    appId: \"1:997835975983:web:48e2b7487743513bcb45da\",\n    measurementId: \"G-3QBCNZ46XZ\"\n})\n\nconst db = firebaseApp.firestore();\nconst auth = firebaseApp.auth();\n\nexport default db;","import {\n  Button,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Modal,\n} from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport App from \"./App\";\n\nimport db from \"./firebase\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nfunction Todo(props) {\n  const [open, setOpen] = useState(false);\n  const handleClose = () => {\n    setOpen(false);\n  };\n  //   const handleOpen = () => {\n  //     setOpen(true);\n  //   };\n\n  return (\n    <>\n      <Modal open={open} onClose={handleClose}>\n        <h1>Modal Box</h1>\n      </Modal>\n      <List>\n        <ListItem>\n          <ListItemAvatar></ListItemAvatar>\n          <ListItemText primary={props.text} secondary=\"ðŸš€\"></ListItemText>\n        </ListItem>\n        <Button onClick={(e) => setOpen(true)}>Edit</Button>\n        <Button\n          onClick={(event) =>\n            console.log(db.collection(\"todos\").doc(props.todo.id))\n          }\n        >\n          â›” Delete\n        </Button>\n      </List>\n    </>\n  );\n}\n// db.collection(\"todos\").doc(props.todo.id).delete()\nexport default Todo;\n","import { Button, FormControl, Input, InputLabel } from \"@mui/material\";\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Todo from \"./Todo\";\nimport firebase from \"firebase\";\n\nimport db from \"./firebase\";\n\nconst App = () => {\n  const [todos, SetTodos] = useState([]);\n\n  const [input, SetInput] = useState(\"\");\n\n  const inputEvent = (e) => {\n    // console.log(e.target.value);\n    e.preventDefault();\n    SetInput(e.target.value);\n  };\n\n  const addToDo = (e) => {\n    // SetTodos([...todos, input]);\n    db.collection(\"todos\").add({\n      todo: input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    SetInput(\"\"); // Clp the input\n  };\n\n  useEffect(() => {\n    db.collection(\"todos\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) => {\n        SetTodos(snapshot.docs.map((doc) => doc.data().todo));\n      });\n  }, []);\n  return (\n    <>\n      <div className=\"App\">\n        <FormControl onSubmit={inputEvent}>\n          <InputLabel>Wite Todo</InputLabel>\n          <Input type=\"text\" value={input} onChange={inputEvent} />\n          <br />\n          <Button\n            type=\"submit\"\n            onClick={addToDo}\n            variant=\"contained\"\n            color=\"success\"\n            disabled={!input}\n          >\n            Add To Do\n          </Button>\n        </FormControl>\n        <ul>\n          {todos.map((todo) => (\n            <Todo text={todo} />\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n// import Heading from \"./Heading\";\n// import App from \"./App\";\n\n// import Card from \"./Card\"\n// // import youtuber, { favrprog } from \"./App\";\n// import Sdata from \"./Sdata\";\n\n\n// ReactDOM.render(\n//   <>\n//     <h1>Top netflix Series</h1>,\n//     {Sdata.map((val) => {\n//       return (\n//         <Card\n//           imgsrc={val.imgsrc}\n//           title={val.title}\n//           sname={val.sname}\n//           link={val.link}\n//         />\n//       )\n//     })}\n//   </>,\n//   document.getElementById(\"root\")\n// );\n\n\nReactDOM.render(\n  <App />\n  , document.getElementById(\"root\")\n)"],"sourceRoot":""}